// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesProjectTickets.Infrastructure.Contexts;

#nullable disable

namespace SalesProjectTickets.Infrastructure.Migrations
{
    [DbContext(typeof(ContextsDaBa))]
    [Migration("20250327203018_ChangeNamesTableAndPropierty")]
    partial class ChangeNamesTableAndPropierty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesProjectTickets.Domain.Entities.PurchaseHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Creation_date")
                        .HasColumnType("date");

                    b.Property<Guid>("PaymentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentsUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PurchaseStatus")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("TicketsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalToPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TicketsId");

                    b.HasIndex("UsersId");

                    b.ToTable("PurchaseHistory");
                });

            modelBuilder.Entity("SalesProjectTickets.Domain.Entities.Tickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Creation_date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Event_date")
                        .HasColumnType("date");

                    b.Property<string>("Event_location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("SalesProjectTickets.Domain.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Creation_date")
                        .HasColumnType("date");

                    b.Property<int>("Document_identity")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Identity_type")
                        .HasColumnType("int");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Permissions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SalesProjectTickets.Domain.Entities.PurchaseHistory", b =>
                {
                    b.HasOne("SalesProjectTickets.Domain.Entities.Tickets", "Tickets")
                        .WithMany("Payments")
                        .HasForeignKey("TicketsId");

                    b.HasOne("SalesProjectTickets.Domain.Entities.Users", "Users")
                        .WithMany("PaymentsUsers")
                        .HasForeignKey("UsersId");

                    b.Navigation("Tickets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SalesProjectTickets.Domain.Entities.Tickets", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("SalesProjectTickets.Domain.Entities.Users", b =>
                {
                    b.Navigation("PaymentsUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
